<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The Tao of Agile 敏捷之道</title><link href="http://fanyamin.github.io/" rel="alternate"></link><link href="http://fanyamin.github.io/feeds/tips.atom.xml" rel="self"></link><id>http://fanyamin.github.io/</id><updated>2015-06-19T19:30:00+08:00</updated><entry><title>GIT top ten tips</title><link href="http://fanyamin.github.io/git-top-ten-tips.html" rel="alternate"></link><updated>2015-06-19T19:30:00+08:00</updated><author><name>Walter Fan</name></author><id>tag:fanyamin.github.io,2015-06-09:git-top-ten-tips.html</id><summary type="html">&lt;h2&gt;1. 代码会存在于三个区域：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1) 工作区 working directory&lt;/li&gt;
&lt;li&gt;2) 暂存区 staging area&lt;/li&gt;
&lt;li&gt;3) 仓库区 repository&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;远程仓库可能会有多个 git remote -v&lt;/p&gt;
&lt;h2&gt;2. 代码从拉到推&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;git fetch origin &lt;branch&gt;&lt;/li&gt;
&lt;li&gt;git merge &lt;branch&gt;&lt;/li&gt;
&lt;li&gt;git add xxx&lt;/li&gt;
&lt;li&gt;git commit -m "xxx"&lt;/li&gt;
&lt;li&gt;git push origin &lt;branch&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3. 替换本地改动&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;撤销工作区修改&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;git checkout -- &lt;filepath&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;撤销暂存区修改&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;git reset HEAD &lt;filepath&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用远程仓库中的代码覆盖本地代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;git fetch origin &lt;branchname&gt;&lt;/p&gt;
&lt;p&gt;git reset --hard origin/&lt;branchname&gt;
git reset --hard HEAD&lt;/p&gt;
&lt;h2&gt;4. 创新切换删除分支&lt;/h2&gt;
&lt;p&gt;1) 创新分支 git checkout -b &lt;branchname&gt;&lt;/p&gt;
&lt;p&gt;2) 切换分支 git checkout &lt;branchname&gt;&lt;/p&gt;
&lt;p&gt;3) 删除分支 git branch -d &lt;branchname&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;删除远程分支: git push origin --delete &lt;branchname&gt;
  or git push origin :&lt;branchname&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;清空本地分支: git remote prune origin&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4) 查看分支 git branch -a&lt;/p&gt;
&lt;p&gt;5) 重命名分支&lt;/p&gt;
&lt;p&gt;git branch -m &lt;old_branch_name&gt; &lt;new_branch_name&gt;
git push origin &lt;new_branch_name&gt;&lt;/p&gt;
&lt;h2&gt;5. 查看历史&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;显示最近5次的提交的概要历史记录
git log --graph --stat --oneline -5&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;显示最近3次的提交的详细历史记录
git log -p -3&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;6. 比较区别&lt;/h2&gt;
&lt;p&gt;1) 比较工作区和暂存区 git diff&lt;/p&gt;
&lt;p&gt;2) 比较暂存区和仓库区 git diff --cached&lt;/p&gt;
&lt;p&gt;3) 比较工作区和仓库区 git diff HEAD&lt;/p&gt;
&lt;h2&gt;7. 管理标签&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;显示标签
git tag&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加标签
git tag -a &lt;tagname&gt; -m &lt;comments&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;推送标签
git push --tags&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取远程标签
git fetch origin tag &lt;tagname&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除标签
git tag -d &lt;tagname&gt;
git push origin :refs/tags/&lt;tagname&gt;
git push origin --delete tag &lt;tagname&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;8. 子模块&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;添加子模块
git submodule addhttps://chromium.googlesource.com/v8/v8.git&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;初始化子模块
git submodule init&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改子模块
git submodule update&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;9. 回退&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;git log -10&lt;/li&gt;
&lt;li&gt;git reset xxx&lt;/li&gt;
&lt;li&gt;git push origin &lt;branchname&gt; --force&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;10. 冲突解决&lt;/h2&gt;
&lt;p&gt;git stash
git stash pop&lt;/p&gt;</summary><category term="git"></category><category term="tips"></category></entry></feed>